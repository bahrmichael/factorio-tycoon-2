name: AMP Workflow

on:
  workflow_dispatch:
    inputs:
      prompt:
        description: "Prompt"
        required: true

jobs:
  amp-process:
    runs-on: ubuntu-latest
    # Restrict to admins only
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Check if user is admin
        id: check-admin
        uses: actions/github-script@v6
        with:
          script: |
            const { data } = await github.rest.repos.getCollaboratorPermissionLevel({
              owner: context.repo.owner,
              repo: context.repo.repo,
              username: context.actor
            });
            if (data.permission !== 'admin') {
              core.setFailed('Only repository admins can run this workflow');
              return false;
            }
            return true;

      - name: Checkout repository
        if: steps.check-admin.outputs.result == 'true'
        uses: actions/checkout@v4

      - name: Setup Node.js
        if: steps.check-admin.outputs.result == 'true'
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install AMP
        if: steps.check-admin.outputs.result == 'true'
        run: npm install -g @sourcegraph/amp

      - name: Run AMP
        if: steps.check-admin.outputs.result == 'true'
        id: amp
        env:
          AMP_API_KEY: ${{ secrets.AMP_API_KEY }}
          PROMPT: ${{ github.event.inputs.prompt }}
          AMP_SETTINGS_FILE: .github/ci-amp-settings.json
        run: |
          echo "$PROMPT" | amp --no-notifications --no-color
          
      - name: Create placeholder images for missing PNG files
        if: steps.check-admin.outputs.result == 'true'
        run: |
          # Find all PNG references in Lua files
          MISSING_IMAGES=$(grep -r --include="*.lua" -o '"[^"]*\.png"' . | sed 's/^.*"\(.*\)".*$/\1/' | sort -u | while read -r img; do
            # Convert __tycoon-2__ path to the actual repository root
            ACTUAL_PATH=$(echo "$img" | sed 's|__tycoon-2__|.|')
            # Check if the file exists
            if [ ! -f "$ACTUAL_PATH" ]; then
              echo "$ACTUAL_PATH"
            fi
          done)
          
          # Create placeholder images for all missing files
          for img in $MISSING_IMAGES; do
            # Create directory if it doesn't exist
            mkdir -p "$(dirname "$img")"
            # Extract filename for the placeholder text
            FILENAME=$(basename "$img" .png)
            # Create placeholder image (64x64 with filename as text)
            ./utilities/placeholder-image/placeholder-image 64 64 "$FILENAME" "$img"
            echo "Created placeholder for $img"
          done

      - name: Generate PR infos
        if: steps.check-admin.outputs.result == 'true'
        id: pr-info
        env:
          AMP_API_KEY: ${{ secrets.AMP_API_KEY }}
          PROMPT: Use git diff to see the changes of our work. Generate a pr-info.json with a title and a body. Do not use any special characters except ":,."
        run: |
          echo "$PROMPT" | amp --no-notifications --no-color
          if [ -f "pr-info.json" ]; then
            echo "pr_title=$(jq -r '.title' pr-info.json | sed 's/"/\"/g')" >> $GITHUB_OUTPUT
            echo "pr_description=$(jq -r '.body' pr-info.json | sed 's/"/\"/g')" >> $GITHUB_OUTPUT
            rm pr-info.json
          else
            echo "pr_title=AMP PR" >> $GITHUB_OUTPUT
            echo "pr_description=Changes made by AMP" >> $GITHUB_OUTPUT
          fi

      - name: Create Pull Request
        if: steps.check-admin.outputs.result == 'true'
        uses: peter-evans/create-pull-request@f689536846d983d7c4f399cd9b789c38c963aaca
        with:
          commit-message: "AMP PR"
          title: ${{ steps.pr-info.outputs.pr_title }}
          body: |
            ${{ steps.pr-info.outputs.pr_description }}

            Prompt: ${{ github.event.inputs.prompt }}
          branch: amp-changes-${{ github.run_id }}
          base: main
