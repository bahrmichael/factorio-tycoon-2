name: PR Comment Workflow

on:
  issue_comment:
    types: [created]

jobs:
  process-comment:
    runs-on: ubuntu-latest

    steps:
      - name: Extract Comment
        id: extract
        if: github.event.issue.pull_request != null && github.event.comment.user.login == 'bahrmichael' && startsWith(github.event.comment.body, 'Amp')
        run: |
          COMMENT="$(echo "${{ github.event.comment.body }}" | sed 's/^[Aa][Mm][Pp]\s*//')"
          echo "comment=$COMMENT" >> $GITHUB_OUTPUT

      - name: Post Working Comment
        if: steps.extract.outputs.comment != ''
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "I'm working on it!"
            })

      - name: Checkout PR
        if: steps.extract.outputs.comment != ''
        uses: actions/checkout@v4
        with:
          ref: refs/pull/${{ github.event.issue.number }}/head

      # - name: Print Extracted Comment
      #   if: steps.extract.outputs.comment != ''
      #   run: echo ${{ steps.extract.outputs.comment }}"

      - name: Setup Node.js
        if: steps.extract.outputs.comment != ''
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install AMP
        if: steps.extract.outputs.comment != ''
        run: npm install -g @sourcegraph/amp

      - name: Run AMP
        if: steps.extract.outputs.comment != ''
        id: amp
        env:
          AMP_API_KEY: ${{ secrets.AMP_API_KEY }}
          PROMPT: ${{ steps.extract.outputs.comment }}
          AMP_SETTINGS_FILE: .github/ci-amp-settings.json
        run: |
          echo "$PROMPT" | amp --no-notifications --no-color

      - name: Generate commit message
        if: steps.extract.outputs.comment != ''
        id: commit-info
        env:
          AMP_API_KEY: ${{ secrets.AMP_API_KEY }}
          PROMPT: Use git diff to see the changes of our work. Generate a commit-info.txt with a commit message on the first line followed by a more detailed description. You must not use any special characters except ":.,"
        run: |
          echo "$PROMPT" | amp --no-notifications --no-color
          if [ -f "commit-info.txt" ]; then
            COMMIT_MSG=$(head -n 1 commit-info.txt)
            echo "commit_message=$COMMIT_MSG" >> $GITHUB_OUTPUT
            echo "file_content<<EOF" >> $GITHUB_OUTPUT
            cat commit-info.txt >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          else
            echo "commit_message=Changes made by AMP" >> $GITHUB_OUTPUT
            echo "file_content=Changes made by AMP" >> $GITHUB_OUTPUT
          fi

      - name: Push changes back to PR
        if: steps.extract.outputs.comment != ''
        run: |
          git config --global user.name "GitHub Actions Bot"
          git config --global user.email "actions@github.com"
          git add .
          git diff --staged --quiet || git commit -m "${{ steps.commit-info.outputs.commit_message }}"
          git push

      - name: Post Commit Info Comment
        if: steps.extract.outputs.comment != ''
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `${{ steps.commit-info.outputs.file_content }}`
            })
