name: Factorio E2E Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  e2e-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create mod directory
        run: |
          mkdir -p ./factorio/mods/tycoon-2
          find . -maxdepth 1 -mindepth 1 -not -path "./factorio" -exec cp -r {} ./factorio/mods/tycoon-2/ \;

      - name: Download Factorio headless
        run: |
          wget -q https://factorio.com/get-download/stable/headless/linux64 -O factorio.tar.xz
          tar -xJf factorio.tar.xz

      - name: Configure Factorio server
        run: |
          mkdir -p ./factorio/mods
          echo '{"mods":[{"name":"tycoon-2","enabled":true}]}' > ./factorio/mods/mod-list.json

      - name: Create new save and run server
        id: run_server
        run: |
          set +e
          mkdir -p ./factorio/saves
          ./factorio/bin/x64/factorio --create ./factorio/saves/tycoon-test.zip
          # Start server with timeout - will terminate if no new output for 10 seconds
          timeout --foreground --kill-after=5s 30s ./factorio/bin/x64/factorio --start-server ./factorio/saves/tycoon-test.zip --server-settings ./factorio/data/server-settings.example.json > server_output.log 2>&1
          EXIT_CODE=$?
          cat server_output.log
          # Timeout exit code is 124, which means server ran without new output for 10s - success case
          if [ $EXIT_CODE -eq 124 ]; then
            echo "Server ran successfully for 10 seconds without errors"
            exit 0
          elif grep -i "error" server_output.log; then
            echo "::error ::Factorio server encountered errors"
            exit 1
          else
            echo "Factorio server started successfully"
          fi

      - name: Upload server logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: server-logs
          path: server_output.log
